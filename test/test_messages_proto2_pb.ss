;;; Generated by the protocol buffer compiler. DO NOT EDIT!
;;; source: google/protobuf/test_messages_proto2.proto
;;; Edited to remove the unsupported groups

(define-message TestAllTypesProto2
  (optional_int32 int32 1)
  (optional_int64 int64 2)
  (optional_uint32 uint32 3)
  (optional_uint64 uint64 4)
  (optional_sint32 sint32 5)
  (optional_sint64 sint64 6)
  (optional_fixed32 fixed32 7)
  (optional_fixed64 fixed64 8)
  (optional_sfixed32 sfixed32 9)
  (optional_sfixed64 sfixed64 10)
  (optional_float float 11)
  (optional_double double 12)
  (optional_bool bool 13)
  (optional_string string 14)
  (optional_bytes bytes 15)
  (optional_nested_message (message TestAllTypesProto2.NestedMessage) 18)
  (optional_foreign_message (message ForeignMessageProto2) 19)
  (optional_nested_enum (enum TestAllTypesProto2.NestedEnum) 21)
  (optional_foreign_enum (enum ForeignEnumProto2) 22)
  (optional_string_piece string 24)
  (optional_cord string 25)
  (recursive_message (message TestAllTypesProto2) 27)
  (repeated_int32 (repeated int32) 31)
  (repeated_int64 (repeated int64) 32)
  (repeated_uint32 (repeated uint32) 33)
  (repeated_uint64 (repeated uint64) 34)
  (repeated_sint32 (repeated sint32) 35)
  (repeated_sint64 (repeated sint64) 36)
  (repeated_fixed32 (repeated fixed32) 37)
  (repeated_fixed64 (repeated fixed64) 38)
  (repeated_sfixed32 (repeated sfixed32) 39)
  (repeated_sfixed64 (repeated sfixed64) 40)
  (repeated_float (repeated float) 41)
  (repeated_double (repeated double) 42)
  (repeated_bool (repeated bool) 43)
  (repeated_string (repeated string) 44)
  (repeated_bytes (repeated bytes) 45)
  (repeated_nested_message (repeated (message TestAllTypesProto2.NestedMessage)) 48)
  (repeated_foreign_message (repeated (message ForeignMessageProto2)) 49)
  (repeated_nested_enum (repeated (enum TestAllTypesProto2.NestedEnum)) 51)
  (repeated_foreign_enum (repeated (enum ForeignEnumProto2)) 52)
  (repeated_string_piece (repeated string) 54)
  (repeated_cord (repeated string) 55)
  (packed_int32 (repeated int32) 75)
  (packed_int64 (repeated int64) 76)
  (packed_uint32 (repeated uint32) 77)
  (packed_uint64 (repeated uint64) 78)
  (packed_sint32 (repeated sint32) 79)
  (packed_sint64 (repeated sint64) 80)
  (packed_fixed32 (repeated fixed32) 81)
  (packed_fixed64 (repeated fixed64) 82)
  (packed_sfixed32 (repeated sfixed32) 83)
  (packed_sfixed64 (repeated sfixed64) 84)
  (packed_float (repeated float) 85)
  (packed_double (repeated double) 86)
  (packed_bool (repeated bool) 87)
  (packed_nested_enum (repeated (enum TestAllTypesProto2.NestedEnum)) 88)
  (unpacked_int32 (repeated int32) 89)
  (unpacked_int64 (repeated int64) 90)
  (unpacked_uint32 (repeated uint32) 91)
  (unpacked_uint64 (repeated uint64) 92)
  (unpacked_sint32 (repeated sint32) 93)
  (unpacked_sint64 (repeated sint64) 94)
  (unpacked_fixed32 (repeated fixed32) 95)
  (unpacked_fixed64 (repeated fixed64) 96)
  (unpacked_sfixed32 (repeated sfixed32) 97)
  (unpacked_sfixed64 (repeated sfixed64) 98)
  (unpacked_float (repeated float) 99)
  (unpacked_double (repeated double) 100)
  (unpacked_bool (repeated bool) 101)
  (unpacked_nested_enum (repeated (enum TestAllTypesProto2.NestedEnum)) 102)
  (map_int32_int32 (map int32 int32) 56)
  (map_int64_int64 (map int64 int64) 57)
  (map_uint32_uint32 (map uint32 uint32) 58)
  (map_uint64_uint64 (map uint64 uint64) 59)
  (map_sint32_sint32 (map sint32 sint32) 60)
  (map_sint64_sint64 (map sint64 sint64) 61)
  (map_fixed32_fixed32 (map fixed32 fixed32) 62)
  (map_fixed64_fixed64 (map fixed64 fixed64) 63)
  (map_sfixed32_sfixed32 (map sfixed32 sfixed32) 64)
  (map_sfixed64_sfixed64 (map sfixed64 sfixed64) 65)
  (map_int32_float (map int32 float) 66)
  (map_int32_double (map int32 double) 67)
  (map_bool_bool (map bool bool) 68)
  (map_string_string (map string string) 69)
  (map_string_bytes (map string bytes) 70)
  (map_string_nested_message (map string (message TestAllTypesProto2.NestedMessage)) 71)
  (map_string_foreign_message (map string (message ForeignMessageProto2)) 72)
  (map_string_nested_enum (map string (enum TestAllTypesProto2.NestedEnum)) 73)
  (map_string_foreign_enum (map string (enum ForeignEnumProto2)) 74)
  (oneof_uint32 uint32 111)
  (oneof_nested_message (message TestAllTypesProto2.NestedMessage) 112)
  (oneof_string string 113)
  (oneof_bytes bytes 114)
  (oneof_bool bool 115)
  (oneof_uint64 uint64 116)
  (oneof_float float 117)
  (oneof_double double 118)
  (oneof_enum (enum TestAllTypesProto2.NestedEnum) 119)
;;  (data (group TestAllTypesProto2.Data) 201)
  (default_int32 int32 241)
  (default_int64 int64 242)
  (default_uint32 uint32 243)
  (default_uint64 uint64 244)
  (default_sint32 sint32 245)
  (default_sint64 sint64 246)
  (default_fixed32 fixed32 247)
  (default_fixed64 fixed64 248)
  (default_sfixed32 sfixed32 249)
  (default_sfixed64 sfixed64 250)
  (default_float float 251)
  (default_double double 252)
  (default_bool bool 253)
  (default_string string 254)
  (default_bytes bytes 255)
  (fieldname1 int32 401)
  (field_name2 int32 402)
  (_field_name3 int32 403)
  (field__name4_ int32 404)
  (field0name5 int32 405)
  (field_0_name6 int32 406)
  (fieldName7 int32 407)
  (FieldName8 int32 408)
  (field_Name9 int32 409)
  (Field_Name10 int32 410)
  (FIELD_NAME11 int32 411)
  (FIELD_name12 int32 412)
  (__field_name13 int32 413)
  (__Field_name14 int32 414)
  (field__name15 int32 415)
  (field__Name16 int32 416)
  (field_name17__ int32 417)
  (Field_name18__ int32 418))

(define-message TestAllTypesProto2.NestedMessage
  (a int32 1)
  (corecursive (message TestAllTypesProto2) 2))

(define-message TestAllTypesProto2.Data
  (group_int32 int32 202)
  (group_uint32 uint32 203))

(define-message TestAllTypesProto2.MessageSetCorrect)

(define-message TestAllTypesProto2.MessageSetCorrectExtension1
  (str string 25))

(define-message TestAllTypesProto2.MessageSetCorrectExtension2
  (i int32 9))

(define-enum TestAllTypesProto2.NestedEnum
  (FOO 0)
  (BAR 1)
  (BAZ 2)
  (NEG -1))

(define-message ForeignMessageProto2
  (c int32 1))

(define-message UnknownToTestAllTypes
  (optional_int32 int32 1001)
  (optional_string string 1002)
  (nested_message (message ForeignMessageProto2) 1003)
;;  (optionalgroup (group UnknownToTestAllTypes.OptionalGroup) 1004)
  (optional_bool bool 1006)
  (repeated_int32 (repeated int32) 1011))

(define-message UnknownToTestAllTypes.OptionalGroup
  (a int32 1))

(define-message NullHypothesisProto2)

(define-message EnumOnlyProto2)

(define-enum EnumOnlyProto2.Bool
  (kFalse 0)
  (kTrue 1))

(define-message OneStringProto2
  (data string 1))

(define-enum ForeignEnumProto2
  (FOREIGN_FOO 0)
  (FOREIGN_BAR 1)
  (FOREIGN_BAZ 2))
